// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should render a arrow 1`] = `
<Arrow
  up={false}
>
  <Styled(Text)
    theme={
      Object {
        "animation": [Function],
        "color": Object {
          "black": "#222222",
          "darkBlue": "#002C5F",
          "darkGray": "#515151",
          "error": "#dd3333",
          "gray": "#a9abae",
          "lightGray": "#e5e5e5",
          "overlay": "rgba(0, 0, 0, .15)",
          "primary": "#00528F",
          "secondary": "#00245f",
          "success": "#33bb33",
          "warn": "#dd3333",
          "white": "#fefefe",
        },
        "font": Object {
          "color": "#222222",
          "family": "\\"Ubuntu\\", sans-serif",
          "size": "16px",
          "spacing": 0,
        },
        "shape": Object {
          "border": ".1rem solid rgba(0, 0, 0, .15)",
          "float": "0 .5rem .5rem .125rem rgba(0, 0, 0, .15)",
          "margin": ".25rem .125rem",
          "maxWidth": "1280px",
          "padding": ".75rem .875rem",
          "radius": ".5rem",
          "shadow": "0 .25rem .25rem 0 rgba(0, 0, 0, .15)",
          "size": "16px",
        },
        "transition": Object {
          "time": ".3s ease",
        },
      }
    }
    type="span"
    up={false}
  >
    <StyledComponent
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-htoDjs",
            "isStatic": false,
            "lastClassName": "hEAdvI",
            "rules": Array [
              "
transform: rotate(",
              [Function],
              ");
transition: ",
              [Function],
              ";
display: inline-block;
",
            ],
          },
          "defaultProps": Object {
            "theme": Object {
              "animation": [Function],
              "color": Object {
                "black": "#222222",
                "darkBlue": "#002C5F",
                "darkGray": "#515151",
                "error": "#dd3333",
                "gray": "#a9abae",
                "lightGray": "#e5e5e5",
                "overlay": "rgba(0, 0, 0, .15)",
                "primary": "#00528F",
                "secondary": "#00245f",
                "success": "#33bb33",
                "warn": "#dd3333",
                "white": "#fefefe",
              },
              "font": Object {
                "color": "#222222",
                "family": "\\"Ubuntu\\", sans-serif",
                "size": "16px",
                "spacing": 0,
              },
              "shape": Object {
                "border": ".1rem solid rgba(0, 0, 0, .15)",
                "float": "0 .5rem .5rem .125rem rgba(0, 0, 0, .15)",
                "margin": ".25rem .125rem",
                "maxWidth": "1280px",
                "padding": ".75rem .875rem",
                "radius": ".5rem",
                "shadow": "0 .25rem .25rem 0 rgba(0, 0, 0, .15)",
                "size": "16px",
              },
              "transition": Object {
                "time": ".3s ease",
              },
            },
            "type": "span",
          },
          "displayName": "Styled(Text)",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-htoDjs",
          "target": [Function],
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
          Symbol(Symbol.hasInstance): [Function],
        }
      }
      forwardedRef={null}
      theme={
        Object {
          "animation": [Function],
          "color": Object {
            "black": "#222222",
            "darkBlue": "#002C5F",
            "darkGray": "#515151",
            "error": "#dd3333",
            "gray": "#a9abae",
            "lightGray": "#e5e5e5",
            "overlay": "rgba(0, 0, 0, .15)",
            "primary": "#00528F",
            "secondary": "#00245f",
            "success": "#33bb33",
            "warn": "#dd3333",
            "white": "#fefefe",
          },
          "font": Object {
            "color": "#222222",
            "family": "\\"Ubuntu\\", sans-serif",
            "size": "16px",
            "spacing": 0,
          },
          "shape": Object {
            "border": ".1rem solid rgba(0, 0, 0, .15)",
            "float": "0 .5rem .5rem .125rem rgba(0, 0, 0, .15)",
            "margin": ".25rem .125rem",
            "maxWidth": "1280px",
            "padding": ".75rem .875rem",
            "radius": ".5rem",
            "shadow": "0 .25rem .25rem 0 rgba(0, 0, 0, .15)",
            "size": "16px",
          },
          "transition": Object {
            "time": ".3s ease",
          },
        }
      }
      type="span"
      up={false}
    >
      <Text
        align="left"
        className="sc-htoDjs hEAdvI"
        isLabel={false}
        small={false}
        strong={false}
        theme={
          Object {
            "animation": [Function],
            "color": Object {
              "black": "#222222",
              "darkBlue": "#002C5F",
              "darkGray": "#515151",
              "error": "#dd3333",
              "gray": "#a9abae",
              "lightGray": "#e5e5e5",
              "overlay": "rgba(0, 0, 0, .15)",
              "primary": "#00528F",
              "secondary": "#00245f",
              "success": "#33bb33",
              "warn": "#dd3333",
              "white": "#fefefe",
            },
            "font": Object {
              "color": "#222222",
              "family": "\\"Ubuntu\\", sans-serif",
              "size": "16px",
              "spacing": 0,
            },
            "shape": Object {
              "border": ".1rem solid rgba(0, 0, 0, .15)",
              "float": "0 .5rem .5rem .125rem rgba(0, 0, 0, .15)",
              "margin": ".25rem .125rem",
              "maxWidth": "1280px",
              "padding": ".75rem .875rem",
              "radius": ".5rem",
              "shadow": "0 .25rem .25rem 0 rgba(0, 0, 0, .15)",
              "size": "16px",
            },
            "transition": Object {
              "time": ".3s ease",
            },
          }
        }
        transform="none"
        type="span"
        up={false}
      >
        <styled.span
          align="left"
          className="sc-htoDjs hEAdvI"
          isLabel={false}
          small={false}
          strong={false}
          theme={
            Object {
              "animation": [Function],
              "color": Object {
                "black": "#222222",
                "darkBlue": "#002C5F",
                "darkGray": "#515151",
                "error": "#dd3333",
                "gray": "#a9abae",
                "lightGray": "#e5e5e5",
                "overlay": "rgba(0, 0, 0, .15)",
                "primary": "#00528F",
                "secondary": "#00245f",
                "success": "#33bb33",
                "warn": "#dd3333",
                "white": "#fefefe",
              },
              "font": Object {
                "color": "#222222",
                "family": "\\"Ubuntu\\", sans-serif",
                "size": "16px",
                "spacing": 0,
              },
              "shape": Object {
                "border": ".1rem solid rgba(0, 0, 0, .15)",
                "float": "0 .5rem .5rem .125rem rgba(0, 0, 0, .15)",
                "margin": ".25rem .125rem",
                "maxWidth": "1280px",
                "padding": ".75rem .875rem",
                "radius": ".5rem",
                "shadow": "0 .25rem .25rem 0 rgba(0, 0, 0, .15)",
                "size": "16px",
              },
              "transition": Object {
                "time": ".3s ease",
              },
            }
          }
          transform="none"
          up={false}
        >
          <StyledComponent
            align="left"
            className="sc-htoDjs hEAdvI"
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-bwzfXH",
                  "isStatic": false,
                  "lastClassName": "edonuT",
                  "rules": Array [
                    "
font-size: ",
                    [Function],
                    ";
",
                    [Function],
                    "
",
                  ],
                },
                "defaultProps": Object {
                  "theme": Object {
                    "animation": [Function],
                    "color": Object {
                      "black": "#222222",
                      "darkBlue": "#002C5F",
                      "darkGray": "#515151",
                      "error": "#dd3333",
                      "gray": "#a9abae",
                      "lightGray": "#e5e5e5",
                      "overlay": "rgba(0, 0, 0, .15)",
                      "primary": "#00528F",
                      "secondary": "#00245f",
                      "success": "#33bb33",
                      "warn": "#dd3333",
                      "white": "#fefefe",
                    },
                    "font": Object {
                      "color": "#222222",
                      "family": "\\"Ubuntu\\", sans-serif",
                      "size": "16px",
                      "spacing": 0,
                    },
                    "shape": Object {
                      "border": ".1rem solid rgba(0, 0, 0, .15)",
                      "float": "0 .5rem .5rem .125rem rgba(0, 0, 0, .15)",
                      "margin": ".25rem .125rem",
                      "maxWidth": "1280px",
                      "padding": ".75rem .875rem",
                      "radius": ".5rem",
                      "shadow": "0 .25rem .25rem 0 rgba(0, 0, 0, .15)",
                      "size": "16px",
                    },
                    "transition": Object {
                      "time": ".3s ease",
                    },
                  },
                },
                "displayName": "styled.span",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-bwzfXH",
                "target": "span",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
            isLabel={false}
            small={false}
            strong={false}
            theme={
              Object {
                "animation": [Function],
                "color": Object {
                  "black": "#222222",
                  "darkBlue": "#002C5F",
                  "darkGray": "#515151",
                  "error": "#dd3333",
                  "gray": "#a9abae",
                  "lightGray": "#e5e5e5",
                  "overlay": "rgba(0, 0, 0, .15)",
                  "primary": "#00528F",
                  "secondary": "#00245f",
                  "success": "#33bb33",
                  "warn": "#dd3333",
                  "white": "#fefefe",
                },
                "font": Object {
                  "color": "#222222",
                  "family": "\\"Ubuntu\\", sans-serif",
                  "size": "16px",
                  "spacing": 0,
                },
                "shape": Object {
                  "border": ".1rem solid rgba(0, 0, 0, .15)",
                  "float": "0 .5rem .5rem .125rem rgba(0, 0, 0, .15)",
                  "margin": ".25rem .125rem",
                  "maxWidth": "1280px",
                  "padding": ".75rem .875rem",
                  "radius": ".5rem",
                  "shadow": "0 .25rem .25rem 0 rgba(0, 0, 0, .15)",
                  "size": "16px",
                },
                "transition": Object {
                  "time": ".3s ease",
                },
              }
            }
            transform="none"
            up={false}
          >
            <span
              className="sc-htoDjs hEAdvI sc-bwzfXH edonuT"
              transform="none"
            >
              ◄
            </span>
          </StyledComponent>
        </styled.span>
      </Text>
    </StyledComponent>
  </Styled(Text)>
</Arrow>
`;
